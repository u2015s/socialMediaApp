{"version":3,"sources":["redux/authSlice.js","components/LoginForm.jsx","components/RegisterForm.jsx","pages/Login.jsx","pages/Register.js","components/Modal.jsx","redux/postSlice.js","api.js","components/LeftSidebar.jsx","redux/followSlice.js","components/WhoToFollow.jsx","components/RightSidebar.jsx","components/Layout.jsx","components/Post.jsx","pages/Profile.jsx","components/PrivateRoute.jsx","components/AddPost.jsx","pages/Home.jsx","components/MessageCard.jsx","pages/Message.jsx","utils/parseDate.js","components/Comment.jsx","pages/PostDetails.jsx","components/EachMessage.jsx","pages/MessageDetails.jsx","App.js","redux/store.js","index.js"],"names":["loginUser","createAsyncThunk","userData","a","axios","post","data","registerUser","getProfile","id","get","getUsers","authSlice","createSlice","name","initialState","status","isLoggedIn","user","profile","userStatus","users","reducers","setAuth","state","action","payload","logout","localStorage","clear","defaults","headers","common","setUser","extraReducers","pending","fulfilled","response","token","email","_id","setItem","JSON","stringify","rejected","actions","LoginForm","useState","loginData","setLoginData","dispatch","useDispatch","history","useHistory","useSelector","auth","useEffect","push","onSubmit","e","preventDefault","TextField","onChange","prev","target","value","sx","width","margin","bgcolor","variant","label","type","required","Button","padding","borderRadius","backgroundColor","CircularProgress","size","color","onClick","password","RegisterForm","registerData","setRegisterData","Login","isLoginForm","theme","useTheme","Box","display","justifyContent","alignItems","height","shape","breakpoints","values","sm","textAlign","marginBottom","src","alt","Typography","to","Register","Modal","children","open","handleClose","handleSave","saveText","len","Dialog","onClose","fullWidth","maxWidth","DialogTitle","borderBottom","IconButton","DialogContent","DialogActions","disabled","fontSize","getPosts","getPostDetails","getComments","postSlice","posts","postDetails","commentStatus","comments","updateLike","index","findIndex","isLiked","addPost","postData","alert","addComment","commentData","likeOrDislikePost","deletePost","delete","followAccount","follow","followingAccount","DeleteFollowingAccount","followData","getUserProfile","LeftSidebar","parse","getItem","React","anchorEl","setAnchorEl","Boolean","openModal","setOpenModal","handleModalOpen","postText","setPostText","handleAddPost","text","marginTop","style","textDecoration","List","ListItem","button","ListItemIcon","Hidden","lgDown","ListItemText","primaryTypographyProps","palette","active","primary","undefined","event","currentTarget","textTransform","lgUp","Menu","MenuListProps","MenuItem","length","Grid","container","item","flexGrow","Input","multiline","rows","disableUnderline","placeholder","getFollowings","getFollowers","followSlice","followingStatus","followings","followerStatus","followers","WhoToFollow","isFollowing","setIsFollowing","i","handleFollow","console","log","userId","followingId","message","handleUnFollow","deleteId","paddingRight","fontWeight","mr","handle","ml","background","RightSidebar","query","setQuery","queriedUsers","filter","toLowerCase","includes","paddingTop","border","position","inputProps","startAdornment","Search","paddingLeft","zIndex","maxHeight","overflowY","map","overflow","slice","Layout","lg","xs","borderLeft","borderRight","Post","commentText","setCommentText","handleLike","handleAddComment","handleDeletePost","author","flexWrap","formatDistanceToNow","Date","createdAt","marginRight","Profile","useParams","followerId","responseFollow","responseFlwing","backgroundImageUrl","top","left","profileImageUrl","hideFollow","bio","htmlColor","location","marginLeft","Link","href","website","format","marginX","main","PrivateRoute","path","props","AddPost","paddingBottom","borderTop","Home","MessageCard","con","pathname","flexDirection","Message","setConversations","conversationIds","Set","convData","setConvData","updateState","useCallback","check","fid","members","find","member","has","add","getConversations","res","conData","counter","forEach","friendId","conversation","_","cloneDeep","parseDate","tdate","system_date","user_date","K","ie","replace","diff","Math","floor","round","navigator","userAgent","match","Comment","comment","PostDetails","goBack","likes","EachMessage","msg","senderId","boxSizing","wordWrap","minWidth","MessageDetails","useLocation","currentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","socket","useRef","scrollRef","current","io","baseURL","on","sender","now","emit","getMessages","handleSubmit","conversationId","receiverId","scrollIntoView","behavior","flex","overflowX","ref","maxRows","endIcon","App","login","exact","store","configureStore","reducer","createTheme","process","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e9e5b211.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  isLoggedIn: false,\r\n  user: {},\r\n  profile: {},\r\n  userStatus: \"idle\",\r\n  users: [],\r\n};\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async (userData) => {\r\n    const { data } = await axios.post(\"/auth/login\", userData);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (userData) => {\r\n    const { data } = await axios.post(\"/auth/register\", userData);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const getProfile = createAsyncThunk(\"auth/getProfile\", async (id) => {\r\n  const { data } = await axios.get(\"/api/profile/\" + id);\r\n  return data;\r\n});\r\n\r\nexport const getUsers = createAsyncThunk(\"auth/getUsers\", async () => {\r\n  const { data } = await axios.get(\"/auth/users/\");\r\n  return data;\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setAuth: (state, action) => {\r\n      state.isLoggedIn = action.payload.isLoggedIn;\r\n    },\r\n    logout: (state, action) => {\r\n      localStorage.clear();\r\n      state.isLoggedIn = false;\r\n      axios.defaults.headers.common[\"authorization\"] = null;\r\n    },\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loginUser.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [loginUser.fulfilled]: (state, action) => {\r\n      const { token, name, email, _id } = action.payload.response;\r\n      localStorage.setItem(\r\n        \"login\",\r\n        JSON.stringify({ token, email, _id, name, isLoggedIn: true })\r\n      );\r\n      state.user.name = name;\r\n      state.user.email = email;\r\n      state.user._id = _id;\r\n      state.status = \"success\";\r\n      state.isLoggedIn = true;\r\n    },\r\n    [loginUser.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [registerUser.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [registerUser.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      const { token, name, email } = action.payload.response;\r\n      localStorage.setItem(\r\n        \"login\",\r\n        JSON.stringify({ token, name, email, isLoggedIn: true })\r\n      );\r\n      state.user.name = name;\r\n      state.user.email = email;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [registerUser.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [getProfile.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getProfile.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.profile = action.payload.profile;\r\n    },\r\n    [getProfile.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n\r\n    [getUsers.pending]: (state, action) => {\r\n      state.userStatus = \"loading\";\r\n    },\r\n    [getUsers.fulfilled]: (state, action) => {\r\n      state.userStatus = \"success\";\r\n      state.users = action.payload.response.users;\r\n    },\r\n    [getUsers.rejected]: (state, action) => {\r\n      state.userStatus = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\nexport const { setAuth, logout } = authSlice.actions;\r\n","import { Button, CircularProgress, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { loginUser } from \"../redux/authSlice\";\r\n\r\nexport default function LoginForm() {\r\n  const [loginData, setLoginData] = useState({});\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { status, isLoggedIn } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(loginData));\r\n  };\r\n  const loginAsGuest = () => {\r\n    setLoginData({ email: \"user@mail.com\", password: \"user1234\" });\r\n    dispatch(loginUser({ email: \"user@mail.com\", password: \"user1234\" }));\r\n  };\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [isLoggedIn, history]);\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          onChange={(e) =>\r\n            setLoginData((prev) => ({\r\n              ...prev,\r\n              [e.target.name]: e.target.value,\r\n            }))\r\n          }\r\n          sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n          variant=\"outlined\"\r\n          label=\"Enter Email\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          // borderRadius={20}\r\n\r\n        />\r\n        <TextField\r\n          sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n          variant=\"outlined\"\r\n          label=\"Enter Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={(e) =>\r\n            setLoginData((prev) => ({\r\n              ...prev,\r\n              [e.target.name]: e.target.value,\r\n            }))\r\n          }\r\n          name=\"password\"\r\n        />\r\n        <Button\r\n          sx={{\r\n            width: \"100%\",\r\n            margin: \"1.5rem 0\",\r\n            padding: \"12px 0\",\r\n            borderRadius: \"28px\",\r\n            backgroundColor: \"#00c8ff\"\r\n          }}\r\n          variant=\"contained\"\r\n          // color=\"primary\"\r\n          \r\n          type=\"submit\"\r\n        >\r\n          {status === \"loading\" ? (\r\n            <CircularProgress size={24} sx={{ color: \"#FFF\" }} />\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </Button>\r\n      </form>\r\n      <Button\r\n        onClick={loginAsGuest}\r\n        sx={{\r\n          width: \"100%\",\r\n          margin: \".5rem 0 1rem 0.5rem\",\r\n          padding: \"12px 0\",\r\n          borderRadius: \"28px\",\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        {status === \"loading\" ? \"Logging in...\" : \"Login as guest\"}\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import { Button, CircularProgress, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { registerUser } from \"../redux/authSlice\";\r\n\r\nexport default function RegisterForm() {\r\n  const [registerData, setRegisterData] = useState({});\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { status, isLoggedIn } = useSelector((state) => state.auth);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(registerUser(registerData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [isLoggedIn, history]);\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        onChange={(e) =>\r\n          setRegisterData((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n          }))\r\n        }\r\n        name=\"name\"\r\n        sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n        variant=\"outlined\"\r\n        label=\"Enter full name\"\r\n        type=\"text\"\r\n        required\r\n      />\r\n      <TextField\r\n        name=\"handle\"\r\n        onChange={(e) =>\r\n          setRegisterData((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n          }))\r\n        }\r\n        sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n        variant=\"outlined\"\r\n        label=\"Choose an handle\"\r\n        type=\"text\"\r\n        required\r\n      />\r\n      <TextField\r\n        name=\"email\"\r\n        onChange={(e) =>\r\n          setRegisterData((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n          }))\r\n        }\r\n        sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n        variant=\"outlined\"\r\n        label=\"Enter Email\"\r\n        type=\"email\"\r\n        required\r\n      />\r\n      <TextField\r\n        name=\"password\"\r\n        onChange={(e) =>\r\n          setRegisterData((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n          }))\r\n        }\r\n        sx={{ width: \"100%\", margin: \"1rem 0\", bgcolor: \"#fff\" }}\r\n        variant=\"outlined\"\r\n        label=\"Enter Password\"\r\n        type=\"password\"\r\n        required\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        sx={{\r\n          width: \"100%\",\r\n          margin: \"1.5rem 0\",\r\n          padding: \"12px 0\",\r\n          borderRadius: \"28px\",\r\n          backgroundColor: \"#00c8ff\"\r\n\r\n        }}\r\n        variant=\"contained\"\r\n        // color=\"primary\"\r\n      >\r\n        {status === \"loading\" ? (\r\n          <CircularProgress size={24} sx={{ color: \"#FFF\" }} />\r\n        ) : (\r\n          \"Register\"\r\n        )}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport {Link} from 'react-router-dom'\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function Login() {\r\n  const [isLoginForm, setIsLoginForm] = useState(true);\r\n  const theme = useTheme();\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundColor: \"#00c8ff\"\r\n\r\n      }}\r\n    >\r\n      <Box\r\n        borderRadius={theme.shape.borderRadius}\r\n        sx={{\r\n          width: theme.breakpoints.values.sm,\r\n          bgcolor: \"#FFFFFF\",\r\n          padding: \" 3rem 2rem\",\r\n        }}\r\n      >\r\n        <Box textAlign=\"center\" marginBottom=\"1rem\">\r\n          <img src=\"/logo.png\" alt=\"Logo\" />\r\n        </Box>\r\n        {isLoginForm ? (\r\n          <Typography variant=\"h5\">Login to your account</Typography>\r\n        ) : (\r\n          <Typography variant=\"h5\">Create a new account</Typography>\r\n        )}\r\n        {isLoginForm ? <LoginForm /> : <RegisterForm />}\r\n        {isLoginForm ? (\r\n          <Box textAlign=\"center\" margin=\".5rem 0\">\r\n            Don't have an account?{\" \"}\r\n            <Link to='/register'>Create one</Link>\r\n          </Box>\r\n        ) : (\r\n          <Box textAlign=\"center\" margin=\".5rem 0\">\r\n            Already registered?{\" \"}\r\n            <Link to='/login'>Sign in</Link>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\n// import Link from \"@mui/material/Link\";\r\nimport {Link} from 'react-router-dom'\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function Register() {\r\n  const [isLoginForm, setIsLoginForm] = useState(false);\r\n  const theme = useTheme();\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundColor: \"#00c8ff\"\r\n      }}\r\n    >\r\n      <Box\r\n        borderRadius={theme.shape.borderRadius}\r\n        sx={{\r\n          width: theme.breakpoints.values.sm,\r\n          bgcolor: \"#FFFFFF\",\r\n          padding: \" 3rem 2rem\",\r\n        }}\r\n      >\r\n        <Box textAlign=\"center\" marginBottom=\"1rem\">\r\n          <img src=\"/logo.png\" alt=\"Logo\" />\r\n        </Box>\r\n       \r\n          <Typography variant=\"h5\">Create a new account</Typography>\r\n        \r\n       <RegisterForm />\r\n        \r\n          <Box textAlign=\"center\" margin=\".5rem 0\">\r\n            Already registered?{\" \"}\r\n            <Link to='/login'>Sign in</Link>\r\n          </Box>\r\n        \r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, useTheme } from \"@mui/system\";\r\nexport default function Modal({\r\n  children,\r\n  open,\r\n  handleClose,\r\n  handleSave,\r\n  saveText,\r\n  len,\r\n}) {\r\n  const theme = useTheme();\r\n  const handleClick = () => {\r\n    handleSave();\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n      <DialogTitle>\r\n        <Box textAlign=\"right\" borderBottom=\"1px solid #ccc\">\r\n          <IconButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>{children}</DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          disabled={len === 0}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          sx={{\r\n            borderRadius: theme.shape.borderRadius,\r\n            fontSize: \"12px\",\r\n          }}\r\n          onClick={handleClick}\r\n        >\r\n          {saveText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  posts: [],\r\n  postDetails: {},\r\n  commentStatus: \"idle\",\r\n  comments: [],\r\n};\r\n\r\nexport const getPosts = createAsyncThunk(\"post/getPosts\", async () => {\r\n  const { data } = await axios.get(\"/api/posts\");\r\n  return data;\r\n});\r\n\r\nexport const getPostDetails = createAsyncThunk(\r\n  \"post/getPostDetails\",\r\n  async (id) => {\r\n    const { data } = await axios.get(\"/api/posts/\" + id);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const getComments = createAsyncThunk(\"post/getComments\", async (id) => {\r\n  const { data } = await axios.get(\"/api/comments/\" + id);\r\n  return data;\r\n});\r\n\r\nexport const postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    updateLike: (state, action) => {\r\n      const index = state.posts.findIndex(\r\n        (post) => post._id === action.payload.id\r\n      );\r\n      state.posts[index].isLiked = !state.posts[index].isLiked;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getPosts.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getPosts.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.posts = action.payload.response.posts;\r\n    },\r\n    [getPosts.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n\r\n    [getPostDetails.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getPostDetails.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.postDetails = action.payload.response.post;\r\n    },\r\n    [getPostDetails.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n\r\n    [getComments.pending]: (state, action) => {\r\n      state.commentStatus = \"loading\";\r\n    },\r\n    [getComments.fulfilled]: (state, action) => {\r\n      state.commentStatus = \"success\";\r\n      state.comments = action.payload.response.comments;\r\n    },\r\n    [getComments.rejected]: (state, action) => {\r\n      state.commentStatus = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\nexport const { updateLike } = postSlice.actions;\r\n","import axios from \"axios\";\r\n\r\nexport const addPost = async (postData) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/posts\", postData);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const addComment = async (commentData) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"/api/comments/\" + commentData.id,\r\n      commentData\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const likeOrDislikePost = async (postData) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/posts/likes\", postData);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const deletePost = async (postData) => {\r\n  try {\r\n    const { data } = await axios.delete(`/api/posts/${postData.id}`);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const followAccount = async (follow) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/followers\", follow);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const followingAccount = async (follow) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/followings\", follow);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n\r\nexport const DeleteFollowingAccount = async (followData) => {\r\n  try {\r\n    const { data } = await axios.post(`/api/followings/delete`,followData);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n  // try {\r\n  //   const { data } = await axios.post(\"/api/followings\", follow);\r\n  //   return data;\r\n  // } catch (error) {\r\n  //   alert(\"Something went wrong.\");\r\n  // }\r\n};\r\n\r\nexport const getUserProfile = async (id) => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/profile/\" + id);\r\n    return data;\r\n  } catch (error) {\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport TagIcon from \"@mui/icons-material/Tag\";\r\nimport NotificationsNoneIcon from \"@mui/icons-material/NotificationsNone\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  Input,\r\n  Menu,\r\n  MenuItem,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\r\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\r\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { logout } from \"../redux/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Modal from \"./Modal\";\r\nimport { getPosts } from \"../redux/postSlice\";\r\nimport { addPost } from \"../api\";\r\n\r\nexport default function LeftSidebar() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const [postText, setPostText] = React.useState(\"\");\r\n  const handleAddPost = async () => {\r\n    const data = await addPost({ text: postText });\r\n    if (data) {\r\n      dispatch(getPosts());\r\n      setPostText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ height: \"100vh\", maxWidth: \"100%\" }}>\r\n        <Box textAlign=\"center\"\r\n          sx={{\r\n            marginTop: '3%'\r\n          }}\r\n        >\r\n          <NavLink\r\n            to=\"/home\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              backgroundColor: \"inherit\",\r\n            }}\r\n          >\r\n            <img src=\"/logo512.png\" alt=\"logo\" width=\"80px\" />\r\n          </NavLink>\r\n        </Box>\r\n        <List>\r\n\r\n          <NavLink\r\n            to=\"/home\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              backgroundColor: \"inherit\",\r\n            }}\r\n          >\r\n            <ListItem\r\n              button\r\n              sx={{\r\n                borderRadius: \"28px\",\r\n                margin: \".5rem 0\",\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <HomeIcon fontSize=\"medium\" color=\"action\" />\r\n              </ListItemIcon>\r\n              <Hidden lgDown>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    fontSize: \"18px\",\r\n                    color: theme.palette.action.active,\r\n                  }}\r\n                  primary=\"Home\"\r\n                />\r\n              </Hidden>\r\n            </ListItem>\r\n          </NavLink>\r\n\r\n          {/* <ListItem\r\n            button\r\n            sx={{\r\n              borderRadius: \"28px\",\r\n              margin: \".5rem 0\",\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <TagIcon fontSize=\"medium\" color=\"action\" />\r\n            </ListItemIcon>\r\n            <Hidden lgDown>\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  fontSize: \"18px\",\r\n                  color: theme.palette.action.active,\r\n                }}\r\n                primary=\"Explore\"\r\n              />\r\n            </Hidden>\r\n          </ListItem> */}\r\n\r\n          {/* <ListItem\r\n            button\r\n            sx={{\r\n              borderRadius: \"28px\",\r\n              margin: \".5rem 0\",\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <NotificationsNoneIcon fontSize=\"medium\" color=\"action\" />\r\n            </ListItemIcon>\r\n            <Hidden lgDown>\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  fontSize: \"18px\",\r\n                  color: theme.palette.action.active,\r\n                }}\r\n                primary=\"Notifications\"\r\n              />\r\n            </Hidden>\r\n          </ListItem> */}\r\n          <NavLink\r\n            to=\"/messages\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              backgroundColor: \"inherit\",\r\n            }}\r\n          >\r\n            <ListItem\r\n              button\r\n              sx={{\r\n                borderRadius: \"28px\",\r\n                margin: \".5rem 0\",\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <MailOutlineIcon fontSize=\"medium\" color=\"action\" />\r\n              </ListItemIcon>\r\n              <Hidden lgDown>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    fontSize: \"18px\",\r\n                    color: theme.palette.action.active,\r\n                  }}\r\n                  primary=\"Messages\"\r\n                />\r\n              </Hidden>\r\n            </ListItem>\r\n\r\n          </NavLink>\r\n\r\n\r\n          {/* <ListItem\r\n            button\r\n            sx={{\r\n              borderRadius: \"28px\",\r\n              margin: \".5rem 0\",\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <BookmarkIcon fontSize=\"medium\" color=\"action\" />\r\n            </ListItemIcon>\r\n            <Hidden lgDown>\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  fontSize: \"18px\",\r\n                  color: theme.palette.action.active,\r\n                }}\r\n                primary=\"Bookmarks\"\r\n              />\r\n            </Hidden>\r\n          </ListItem> */}\r\n\r\n          {/* \r\n          <ListItem\r\n            button\r\n            sx={{\r\n              borderRadius: \"28px\",\r\n              margin: \".5rem 0\",\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <ListAltIcon fontSize=\"medium\" color=\"action\" />\r\n            </ListItemIcon>\r\n            <Hidden lgDown>\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  fontSize: \"18px\",\r\n                  color: theme.palette.action.active,\r\n                }}\r\n                primary=\"Lists\"\r\n              />\r\n            </Hidden>\r\n          </ListItem> */}\r\n\r\n          <NavLink\r\n            to={`/profile/${_id}`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              backgroundColor: \"inherit\",\r\n            }}\r\n          >\r\n            <ListItem\r\n              button\r\n              sx={{\r\n                borderRadius: \"28px\",\r\n                margin: \".5rem 0\",\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <PersonOutlineIcon fontSize=\"medium\" color=\"action\" />\r\n              </ListItemIcon>\r\n              <Hidden lgDown>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    fontSize: \"18px\",\r\n                    color: theme.palette.action.active,\r\n                  }}\r\n                  primary=\"Profile\"\r\n                />\r\n              </Hidden>\r\n            </ListItem>\r\n          </NavLink>\r\n          <ListItem\r\n            id=\"basic-button\"\r\n            aria-controls=\"basic-menu\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            onClick={handleClick}\r\n            button\r\n            sx={{\r\n              borderRadius: \"28px\",\r\n              margin: \".5rem 0\",\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <MoreHorizIcon fontSize=\"medium\" color=\"action\" />\r\n            </ListItemIcon>\r\n            <Hidden lgDown>\r\n              <ListItemText\r\n                primaryTypographyProps={{\r\n                  fontSize: \"18px\",\r\n                  color: theme.palette.action.active,\r\n                }}\r\n                primary=\"More\"\r\n              />\r\n            </Hidden>\r\n          </ListItem>\r\n        </List>\r\n        <Hidden lgDown>\r\n          <Button\r\n            onClick={handleModalOpen}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            style={{\r\n              borderRadius: \"28px\",\r\n              padding: \"10px\",\r\n              textTransform: \"capitalize\",\r\n            }}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            onClick={handleModalOpen}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              borderRadius: \"28px\",\r\n              padding: \"0 15px\",\r\n              textTransform: \"capitalize\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              dispatch(logout());\r\n              handleClose();\r\n            }}\r\n          >\r\n            Logout\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n      {openModal && (\r\n        <Modal\r\n          open={openModal}\r\n          handleClose={handleModalClose}\r\n          saveText={\"Post\"}\r\n          len={postText.length}\r\n          handleSave={handleAddPost}\r\n        >\r\n          <Box>\r\n            <Grid container>\r\n              <Grid item>\r\n                <img src=\"/logo.png\" alt=\"logo\" width=\"60px\" />\r\n              </Grid>\r\n              <Grid item flexGrow=\"1\">\r\n                <Box padding=\".5rem 0\">\r\n                  <Input\r\n                    value={postText}\r\n                    onChange={(e) => setPostText(e.target.value)}\r\n                    multiline\r\n                    rows=\"2\"\r\n                    disableUnderline\r\n                    type=\"text\"\r\n                    placeholder=\"What's happening?\"\r\n                    sx={{ width: \"100%\" }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  followingStatus: \"idle\",\r\n  followings: [],\r\n  followerStatus: \"idle\",\r\n  followers: [],\r\n};\r\n\r\nexport const getFollowings = createAsyncThunk(\r\n  \"follow/getFollowings\",\r\n  async (id) => {\r\n    const { data } = await axios.get(\"/api/followings/\" + id);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const getFollowers = createAsyncThunk(\r\n  \"follow/getFollowers\",\r\n  async (id) => {\r\n    const { data } = await axios.get(\"/api/followers/\" + id);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const followSlice = createSlice({\r\n  name: \"follow\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getFollowings.pending]: (state, action) => {\r\n      state.followingStatus = \"loading\";\r\n    },\r\n    [getFollowings.fulfilled]: (state, action) => {\r\n      state.followingStatus = \"success\";\r\n      state.followings = action.payload.response.followings;\r\n    },\r\n    [getFollowings.rejected]: (state, action) => {\r\n      state.followingStatus = \"failed\";\r\n    },\r\n\r\n    [getFollowers.pending]: (state, action) => {\r\n      state.followerStatus = \"loading\";\r\n    },\r\n    [getFollowers.fulfilled]: (state, action) => {\r\n      state.followerStatus = \"success\";\r\n      state.followers = action.payload.response.followers;\r\n    },\r\n    [getFollowers.rejected]: (state, action) => {\r\n      state.followerStatus = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default followSlice.reducer;\r\n// export const {  } = followSlice.actions;\r\n","import { Typography, useTheme } from \"@mui/material\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, {useEffect,useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {DeleteFollowingAccount, followingAccount} from '../api'\r\nimport { getFollowings } from \"../redux/followSlice\";\r\n\r\nexport default function WhoToFollow({ user }) {\r\n  const theme = useTheme();\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n  const [isFollowing,setIsFollowing] = useState(false);\r\n  // console.log(\"10\", user)\r\n  const dispatch = useDispatch();\r\n  const { followings, followers, followingStatus} = useSelector((state) => state.follow);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n      // console.log(followingStatus)\r\n      if(followingStatus===\"success\"){\r\n        // console.log(followings[0])\r\n    \r\n        for(let i = 0; i < followings.length; i++){\r\n          let item = followings[i]._id;\r\n          if(item === user._id){\r\n            // console.log(\"true 35\")\r\n            setIsFollowing(true);\r\n          }\r\n        }\r\n      }\r\n  }, [followingStatus]);\r\n  \r\n \r\n\r\n\r\n  // console.log(\"10\", followings, followers);\r\n  const handleFollow = async () => {\r\n    console.log(\"39\")\r\n    const response = await followingAccount({ userId:_id, followingId: user._id });\r\n    if (response.message === \"following added successfully.\") {\r\n      setIsFollowing(true);\r\n    }\r\n  };\r\n\r\n  const handleUnFollow = async () => {\r\n    const response = await DeleteFollowingAccount({ userId:_id, deleteId: user._id});\r\n    console.log(response.message);\r\n    if (response.message === \"following removed successfully.\") {\r\n      // dispatch(updateLike({ id: post._id }));\r\n      dispatch(getFollowings(_id));\r\n      setIsFollowing(false);\r\n\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Box margin=\"1rem 0\">\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Grid container>\r\n            <Grid item sx={{ paddingRight: \"12px\" }}>\r\n              <img src=\"/user.png\" width=\"50px\" alt=\"logo\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography sx={{ fontSize: \"16px\", fontWeight: \"500\" }}>\r\n                    {user.name}\r\n                  </Typography>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Typography\r\n                      sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}\r\n                    >\r\n                      {\"@\" + user.handle}\r\n                    </Typography>\r\n                    \r\n                    {/* <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        background: \"#ccc\",\r\n                        borderRadius: theme.shape.borderRadius,\r\n                        padding: \"0 6px\",\r\n                        color: \"#777\",\r\n                      }}\r\n                    >\r\n                      follows you\r\n                    </Typography> */}\r\n\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          {\r\n            isFollowing ? \r\n            <Button\r\n            size=\"small\"\r\n            sx={{\r\n              borderRadius: theme.shape.borderRadius,\r\n              textTransform: \"capitalize\",\r\n              ml: \"12px\",\r\n              background: \"black\",\r\n              \"&:hover\": {\r\n                background: \"#333\",\r\n              },\r\n            }}\r\n            variant=\"contained\"\r\n            onClick={(e) => {\r\n              // e.preventDefault();\r\n              handleUnFollow()\r\n            }}\r\n          >\r\n            Unfollow\r\n          </Button>\r\n            \r\n            :\r\n\r\n            <Button\r\n            size=\"small\"\r\n            sx={{\r\n              borderRadius: theme.shape.borderRadius,\r\n              textTransform: \"capitalize\",\r\n              ml: \"12px\",\r\n              background: \"black\",\r\n              \"&:hover\": {\r\n                background: \"#333\",\r\n              },\r\n            }}\r\n            variant=\"contained\"\r\n            onClick={(e) => {\r\n              // e.preventDefault();\r\n              handleFollow()\r\n            }}\r\n          >\r\n            Follow\r\n          </Button>  \r\n          }\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Search } from \"@mui/icons-material\";\r\nimport { Input, Typography, Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React,{useEffect} from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport WhoToFollow from \"./WhoToFollow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFollowings } from \"../redux/followSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function RightSidebar() {\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n  const dispatch = useDispatch();\r\n\r\n  const { users, userStatus } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    dispatch(getFollowings(_id));\r\n    \r\n    \r\n    // followings.followingId.forEach((item)=>{\r\n    //   if(item._id==user._id){\r\n    //     setIsFollowing(true);\r\n    //     break;\r\n    //   }\r\n    // })\r\n  },[]);\r\n  function queriedUsers() {\r\n    return users.filter(\r\n      (user) =>\r\n        user.name.toLowerCase().includes(query.toLowerCase()) ||\r\n        user.handle.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ height: \"100%\" }}>\r\n      <Box paddingTop=\"10px\">\r\n        <Box\r\n          width=\"100%\"\r\n          borderRadius=\"28px\"\r\n          border=\"1px solid #eee\"\r\n          position=\"relative\"\r\n          sx={{\r\n            background: \"#eee\",\r\n          }}\r\n        >\r\n          <Input\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            type=\"text\"\r\n            inputProps={{\r\n              style: { padding: \"10px\" },\r\n            }}\r\n            disableUnderline\r\n            fullWidth\r\n            placeholder=\"Search\"\r\n            startAdornment={\r\n              <Search\r\n                sx={{\r\n                  paddingLeft: \"20px\",\r\n                  color: \"#777\",\r\n                }}\r\n              />\r\n            }\r\n          />\r\n          {query.length !== 0 && (\r\n            <Box\r\n              width=\"100%\"\r\n              sx={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #eee\",\r\n                borderRadius: \"28px\",\r\n                padding: \"1rem 0\",\r\n                zIndex: \"999\",\r\n                maxHeight: \"50vh\",\r\n                overflowY: \"scroll\",\r\n              }}\r\n              position=\"absolute\"\r\n            >\r\n              {query.length !== 0 && queriedUsers().length === 0 && (\r\n                <Typography sx={{ padding: \"0 1rem\" }}>\r\n                  No users found!\r\n                </Typography>\r\n              )}\r\n              {queriedUsers().map((user) => (\r\n                <Box key={user._id}>\r\n                  <Link\r\n                    onClick={() => setQuery(\"\")}\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`/profile/${user._id}`}\r\n                  >\r\n                    <Grid\r\n                      sx={{\r\n                        overflow: \"hidden\",\r\n                        padding: \".2rem 1rem\",\r\n                        \"&:hover\": {\r\n                          backgroundColor: \"#eee\",\r\n                        },\r\n                      }}\r\n                      container\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item sx={{ paddingRight: \"12px\" }}>\r\n                        <img src=\"/logo.png\" width=\"50px\" alt=\"logo\" />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Grid container alignItems=\"center\">\r\n                          <Grid item>\r\n                            <Typography\r\n                              sx={{\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"500\",\r\n                                color: \"#000\",\r\n                              }}\r\n                            >\r\n                              {user.name}\r\n                            </Typography>\r\n                            <Box display=\"flex\" alignItems=\"center\">\r\n                              <Typography\r\n                                sx={{\r\n                                  fontSize: \"14px\",\r\n                                  mr: \"6px\",\r\n                                  color: \"#555\",\r\n                                }}\r\n                              >\r\n                                {user.handle}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Link>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            background: \"#eee\",\r\n            borderRadius: \"28px\",\r\n            padding: \"10px 20px\",\r\n            margin: \"1rem 0\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n            Who to follow\r\n          </Typography>\r\n          {userStatus === \"success\" &&\r\n            users\r\n              .filter((user) => user._id !== _id)\r\n              .slice(0, 7)\r\n              .map((item) => <WhoToFollow key={item._id} user={item} />)}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport LeftSidebar from \"./LeftSidebar\";\r\nimport RightSidebar from \"./RightSidebar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Grid, Hidden } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport { getUsers } from \"../redux/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Layout({ children}) {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: theme.breakpoints.values.lg,\r\n        margin: \"0 auto\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={1} lg={2}>\r\n          <LeftSidebar />\r\n        </Grid>\r\n        <Grid item xs={11} lg={10}>\r\n          <Grid container>\r\n            <Grid item xs={12} lg={8}>\r\n              <Box\r\n                sx={{\r\n                  height: \"100vh\",\r\n                  margin: \"0 1rem\",\r\n                  borderLeft: \"1px solid #ccc\",\r\n                  borderRight: \"1px solid #ccc\",\r\n                }}\r\n              >\r\n                {children}\r\n              </Box>\r\n            </Grid>\r\n            <Hidden lgDown>\r\n              <Grid item lg={4} sx={{ height: \"100vh\" }}>\r\n                <RightSidebar />\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport React, { useState } from \"react\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\r\nimport SyncIcon from \"@mui/icons-material/Sync\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addComment, deletePost, likeOrDislikePost } from \"../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts, updateLike } from \"../redux/postSlice\";\r\nimport Modal from \"./Modal\";\r\nimport { getProfile } from \"../redux/authSlice\";\r\n\r\nexport default function Post({ post, profile }) {\r\n  const dispatch = useDispatch();\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateLike({ id: post._id }));\r\n    const response = await likeOrDislikePost({ id: post._id });\r\n    if (response.message !== \"Post updated successfully.\") {\r\n      dispatch(updateLike({ id: post._id }));\r\n    }\r\n  };\r\n  \r\n  const handleAddComment = async () => {\r\n    const response = await addComment({ id: post._id, text: commentText });\r\n    if (response) {\r\n      setCommentText(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async () => {\r\n    const response = await deletePost({ id: post._id });\r\n    if (response) {\r\n      if (profile) {\r\n        dispatch(getProfile(post.author._id));\r\n      } else {\r\n        dispatch(getPosts());\r\n      }\r\n    }\r\n  };\r\n\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/posts/${post._id}`}\r\n        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n      >\r\n        <Box\r\n          padding=\"1rem\"\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: \"#eee\",\r\n            },\r\n          }}\r\n        >\r\n          <Grid container flexWrap=\"nowrap\">\r\n            <Grid item sx={{ paddingRight: \"1rem\" }}>\r\n              <Link to={`/profile/${post.author._id}`}>\r\n                <img src=\"/user.png\" alt=\"lgoog\" width=\"50px\" />\r\n              </Link>\r\n            </Grid>\r\n            <Grid item flexGrow=\"1\">\r\n              <Box>\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  flexWrap=\"nowrap\"\r\n                >\r\n                  <Grid item>\r\n                    <Box display=\"flex\">\r\n                      <Typography\r\n                        sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}\r\n                      >\r\n                        {post.author.name}\r\n                      </Typography>\r\n                      <Typography\r\n                        sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                      >\r\n                        @{post.author.handle}\r\n                      </Typography>\r\n                      <Typography\r\n                        sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                      >\r\n                        .\r\n                      </Typography>\r\n                      <Typography\r\n                        sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                      >\r\n                        {formatDistanceToNow(new Date(post.createdAt))}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography sx={{ fontSize: \"15px\", color: \"#555\" }}>\r\n                        {post.text}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {post.author._id === _id && (\r\n                      <IconButton\r\n                        aria-expanded={open ? \"true\" : undefined}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleClick(e);\r\n                        }}\r\n                      >\r\n                        <MoreHorizIcon />\r\n                      </IconButton>\r\n                    )}\r\n                    <Menu\r\n                      id=\"basic-menu\"\r\n                      anchorEl={anchorEl}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      MenuListProps={{\r\n                        \"aria-labelledby\": \"basic-button\",\r\n                      }}\r\n                    >\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleDeletePost();\r\n                        }}\r\n                      >\r\n                        Delete Post\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  marginRight=\"5rem\"\r\n                  marginTop=\".8rem\"\r\n                >\r\n                  <IconButton\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleModalOpen();\r\n                    }}\r\n                    size=\"small\"\r\n                  >\r\n                    <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\">\r\n                    <SyncIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton onClick={handleLike} size=\"small\">\r\n                    {post.isLiked ? (\r\n                      <FavoriteIcon fontSize=\"small\" />\r\n                    ) : (\r\n                      <FavoriteBorderIcon fontSize=\"small\" />\r\n                    )}\r\n                  </IconButton>\r\n                  <IconButton size=\"small\">\r\n                    <IosShareIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Link>\r\n      {openModal && (\r\n        <Modal\r\n          open={openModal}\r\n          handleClose={handleModalClose}\r\n          saveText={\"Comment\"}\r\n          len={commentText.length}\r\n          handleSave={handleAddComment}\r\n        >\r\n          <Box>\r\n            <Grid container>\r\n              <Grid item>\r\n                <img src=\"/logo.png\" alt=\"logo\" width=\"60px\" />\r\n              </Grid>\r\n              <Grid item flexGrow=\"1\">\r\n                <Box padding=\".5rem 0\">\r\n                  <Input\r\n                    onChange={(e) => setCommentText(e.target.value)}\r\n                    value={commentText}\r\n                    multiline\r\n                    rows=\"2\"\r\n                    disableUnderline\r\n                    type=\"text\"\r\n                    placeholder=\"Post your comment\"\r\n                    sx={{ width: \"100%\" }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport InsertLinkIcon from \"@mui/icons-material/InsertLink\";\r\nimport DateRangeIcon from \"@mui/icons-material/DateRange\";\r\nimport Post from \"../components/Post\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { getProfile } from \"../redux/authSlice\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { getFollowers, getFollowings } from \"../redux/followSlice\";\r\nimport { followAccount, followingAccount } from \"../api\";\r\nimport format from \"date-fns/format\";\r\n\r\nexport default function Profile() {\r\n  const theme = useTheme();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { profile, status } = useSelector((state) => state.auth);\r\n  const { followingStatus, followerStatus, followers, followings } =\r\n    useSelector((state) => state.follow);\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfile(id));\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (profile.userId) {\r\n      dispatch(getFollowers(profile.userId._id));\r\n      dispatch(getFollowings(profile.userId._id));\r\n    }\r\n  }, [dispatch, profile.userId]);\r\n\r\n  const handleFollow = async () => {\r\n    const responseFollow = await followAccount({\r\n      userId: profile.userId._id,\r\n      followerId: _id,\r\n    });\r\n    const responseFlwing = await followingAccount({\r\n      followingId: profile.userId._id,\r\n      userId: _id,\r\n    });\r\n    if (responseFollow) {\r\n      dispatch(getFollowers(id));\r\n    }\r\n    if (responseFlwing) {\r\n      dispatch(getFollowings(id));\r\n    }\r\n  };\r\n\r\n  function hideFollow() {\r\n    if (profile.userId) {\r\n      if (followings.length !== 0) {\r\n        // for(let i = 0; i < followings.length; i++) {\r\n        //   let item = followings[i]._id\r\n        //     if(item ===profile.userId._id){\r\n        //       return false;\r\n        //     }\r\n        // }\r\n        return (\r\n           _id === profile.userId._id\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item sx={{ mr: \"10px\" }}>\r\n            <RouteLink to=\"/\">\r\n              <IconButton>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </RouteLink>\r\n          </Grid>\r\n\r\n          {status === \"success\" && (\r\n            <Grid item>\r\n              <Typography variant=\"h6\">\r\n                {profile.userId && profile.userId && profile.userId.name}\r\n              </Typography>\r\n              <Typography sx={{ fontSize: \"12px\", color: \"#555\" }}>\r\n                {profile.posts && profile.posts.length} posts\r\n              </Typography>{\" \"}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n      <Box textAlign=\"center\">\r\n        {status === \"loading\" && <CircularProgress size={20} color=\"primary\" />}\r\n      </Box>\r\n      {status === \"success\" && (\r\n        <Box height=\"90vh\" sx={{ overflowY: \"scroll\" }}>\r\n          <Box position=\"relative\">\r\n            <img\r\n              width=\"100%\"\r\n              src={profile.backgroundImageUrl}\r\n              alt=\"background\"\r\n            />\r\n            <Box\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: 120,\r\n                left: 15,\r\n                background: \"#eee\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            >\r\n              <img width=\"150px\" src={profile.profileImageUrl} alt=\"profile\" />\r\n            </Box>\r\n          </Box>\r\n          <Box textAlign=\"right\" padding=\"10px 20px\">\r\n            <IconButton>\r\n              <MoreHorizIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <MailOutlineIcon />\r\n            </IconButton>\r\n            {!hideFollow() && (\r\n              <Button\r\n                onClick={handleFollow}\r\n                size=\"small\"\r\n                sx={{\r\n                  borderRadius: theme.shape.borderRadius,\r\n                  textTransform: \"capitalize\",\r\n                  padding: \"6px 20px\",\r\n                  background: \"black\",\r\n                  \"&:hover\": {\r\n                    background: \"#333\",\r\n                  },\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Follow\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Box padding=\"10px 20px\">\r\n            <Typography variant=\"h6\" sx={{ fontWeight: \"500\" }}>\r\n              {profile.userId && profile.userId.name}\r\n            </Typography>\r\n            <Typography sx={{ fontSize: \"14px\", color: \"#555\" }}>\r\n              @{profile.userId && profile.userId.handle}\r\n            </Typography>\r\n            <Typography fontSize=\"16px\" color=\"#333\" padding=\"10px 0\">\r\n              {profile.bio}\r\n            </Typography>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              padding=\"6px 0\"\r\n              flexWrap=\"wrap\"\r\n            >\r\n              <Box display=\"flex\">\r\n                <LocationOnIcon htmlColor=\"#555\" />\r\n                <Typography sx={{ ml: \"6px\", color: \"#555\" }}>\r\n                  {profile.location}\r\n                </Typography>\r\n              </Box>\r\n              <Box display=\"flex\" marginLeft=\"1rem\">\r\n                <InsertLinkIcon htmlColor=\"#555\" />\r\n                <Link\r\n                  sx={{ textDecoration: \"none\", marginLeft: \"6px\" }}\r\n                  href={profile.website || \"https://github.com/u2015s\"}\r\n                  target = \"_blank\"\r\n                >\r\n                  {profile.website ? profile.website : \"www\"}\r\n                </Link>\r\n              </Box>\r\n              <Box display=\"flex\" marginLeft=\"1rem\">\r\n                <DateRangeIcon htmlColor=\"#555\" />\r\n                <Typography sx={{ ml: \"6px\", color: \"#555\" }}>\r\n                  {profile.userId &&\r\n                    profile.userId &&\r\n                    profile.userId.createdAt &&\r\n                    format(new Date(profile.userId.createdAt), \"MMM dd yyyy\")}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box display=\"flex\">\r\n              <Typography color=\"#555\" marginRight=\"1rem\">\r\n                <strong style={{ color: \"black\" }}>\r\n                  {followingStatus === \"success\" &&\r\n                    followings.length !== 0 &&\r\n                    followings.length + \" \"}\r\n                </strong> \r\n                 Following\r\n              </Typography>\r\n              <Typography color=\"#555\" marginRight=\"1rem\">\r\n                <strong style={{ color: \"black\" }}>\r\n                  {followerStatus === \"success\" &&\r\n                    followers.length !== 0 &&\r\n                    followers[0].followerId.length + \" \"}\r\n                </strong> \r\n\r\n                 Followers\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box borderBottom=\"1px solid #ccc\">\r\n            <Typography\r\n              display=\"inline-block\"\r\n              variant=\"caption\"\r\n              fontSize=\"16px\"\r\n              marginX=\"1rem\"\r\n              padding=\"6px 0\"\r\n              fontWeight=\"500\"\r\n              borderBottom={`4px solid ${theme.palette.primary.main}`}\r\n            >\r\n              Posts\r\n            </Typography>\r\n          </Box>\r\n          {profile.posts &&\r\n            profile.posts.map((post) => (\r\n              <Post key={post._id} post={post} profile={true} />\r\n            ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ path, ...props }) {\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  if (isLoggedIn) {\r\n    return <Route path={path} {...props} />;\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n}\r\n","import { Button, Grid, Input } from \"@mui/material\";\r\nimport { Box, useTheme } from \"@mui/system\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../api\";\r\nimport { getPosts } from \"../redux/postSlice\";\r\n\r\nexport default function AddPost() {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [postText, setPostText] = useState(\"\");\r\n  const handleAddPost = async () => {\r\n    const data = await addPost({ text: postText });\r\n    if (data) {\r\n      dispatch(getPosts());\r\n      setPostText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Box padding=\"1rem 1rem 0 1rem\" borderBottom=\"1px solid #ccc\">\r\n      <Grid container>\r\n        <Grid item sx={{ paddingRight: \"1rem\" }}>\r\n          <img src=\"/user.png\" alt=\"lgogo\" width=\"50px\" />\r\n        </Grid>\r\n        <Grid item flexGrow=\"1\">\r\n          <Box padding=\".5rem 0\">\r\n            <Input\r\n              value={postText}\r\n              onChange={(e) => setPostText(e.target.value)}\r\n              multiline\r\n              rows=\"2\"\r\n              disableUnderline\r\n              type=\"text\"\r\n              placeholder=\"What's happening?\"\r\n              sx={{ width: \"100%\" }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            textAlign=\"right\"\r\n            paddingBottom=\".5rem\"\r\n            paddingTop=\".5rem\"\r\n            borderTop=\"1px solid #ccc\"\r\n          >\r\n            <Button\r\n              onClick={handleAddPost}\r\n              disabled={postText.length === 0}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{\r\n                borderRadius: theme.shape.borderRadius,\r\n                fontSize: \"12px\",\r\n              }}\r\n            >\r\n              Post\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { CircularProgress, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect } from \"react\";\r\nimport AssistantIcon from \"@mui/icons-material/Assistant\";\r\nimport Post from \"../components/Post\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../redux/postSlice\";\r\nimport AddPost from \"../components/AddPost\";\r\n\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n  const { status, posts } = useSelector((state) => state.post);\r\n  \r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Home</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <IconButton>\r\n              <AssistantIcon />\r\n            </IconButton> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box height=\"92vh\" sx={{ overflowY: \"scroll\" }}>\r\n        <AddPost />\r\n        <Box textAlign=\"center\" marginTop=\"1rem\">\r\n          {status === \"loading\" && (\r\n            <CircularProgress size={20} color=\"primary\" />\r\n          )}\r\n        </Box>\r\n        {status === \"success\" &&\r\n          posts.map((post) => <Post key={post._id} post={post} />)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport React, { useState } from \"react\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\r\nimport SyncIcon from \"@mui/icons-material/Sync\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addComment, deletePost, likeOrDislikePost } from \"../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts, updateLike } from \"../redux/postSlice\";\r\nimport Modal from \"./Modal\";\r\nimport { getProfile } from \"../redux/authSlice\";\r\n\r\nexport default function MessageCard({ item, con }) {\r\n  const dispatch = useDispatch();\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{\r\n          pathname:`/messages/${item._id}`,\r\n          state:{con:con}\r\n        \r\n        }}\r\n        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n      >\r\n        <Box\r\n          padding=\"1rem\"\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: \"#eee\",\r\n            },\r\n          }}\r\n        >\r\n          <Grid container\r\n          // flexWrap=\"nowrap\"\r\n          >\r\n            <Grid item sx={{ paddingRight: \"1rem\" }}>\r\n              <Link to={`/profile/${item._id}`}>\r\n                <img src=\"/user.png\" alt=\"lgoog\" width=\"50px\" />\r\n              </Link>\r\n            </Grid>\r\n            <Grid item flexGrow=\"1\">\r\n              <Box>\r\n                <Grid\r\n                  container\r\n                  // justifyContent=\"space-between\"\r\n                  // alignItems=\"center\"\r\n                  // flexWrap=\"nowrap\"\r\n                >\r\n                  <Grid\r\n                  container\r\n                  flexWrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  // lg={12}\r\n                  >\r\n                    <Grid item>\r\n                      <Box\r\n                        // display=\"flex\"\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          // justifyContent: \"center\"\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}\r\n                        >\r\n                          {item.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                        >\r\n                          @{item.handle}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                    \r\n\r\n                    <Grid item>\r\n                      <Box>\r\n                        <Typography\r\n                          sx={{ fontSize: \"15px\", ml: \"auto\", color: \"#555\" }}\r\n                        >\r\n                          {/* {formatDistanceToNow(new Date(item.createdAt))} */}\r\n                          6m\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n\r\n                    \r\n                  </Grid>\r\n\r\n                    {/* <Grid item>\r\n                      <Box>\r\n                        <Typography sx={{ fontSize: \"15px\", color: \"#555\" }}>\r\n                          How are you\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid> */}\r\n\r\n                </Grid>\r\n\r\n\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import { CircularProgress, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AssistantIcon from \"@mui/icons-material/Assistant\";\r\nimport MessageCard from \"../components/MessageCard.jsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFollowings } from \"../redux/followSlice\";\r\nimport { getProfile } from \"../redux/authSlice\";\r\nimport axios from \"axios\";\r\nimport { DeleteFollowingAccount, followingAccount, getUserProfile } from '../api'\r\nimport _ from \"lodash\";\r\n\r\nexport default function Message() {\r\n  const dispatch = useDispatch();\r\n  const { followings, followers, followingStatus } = useSelector((state) => state.follow);\r\n  const { profile, status } = useSelector((state) => state.auth);\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n  const [conversations, setConversations] = useState([]);\r\n  const conversationIds = new Set()\r\n  const [convData, setConvData] = useState([]);\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  function check(item){\r\n    var fid =  item.members.find((member) => member !== _id);\r\n    if(conversationIds.has(fid)){\r\n      return \"\";\r\n    }else{\r\n      conversationIds.add(fid)\r\n      return fid;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/conversations/\" + _id);\r\n        setConversations(res.data);\r\n        var conData = []\r\n        let counter = 0\r\n        res.data.forEach(async (item) => {\r\n          const friendId = check(item);\r\n          \r\n          if(friendId!==\"\"){\r\n            const data = await getUserProfile(friendId)\r\n            data.profile.conversation = item\r\n            // var arr = [...data.profile,]\r\n            // console.log(data.profile)\r\n            conData.push(data.profile)\r\n          }\r\n          counter++;\r\n          // console.log(counter)\r\n          if(counter === res.data.length){\r\n            setConvData(prev => {\r\n              // var arr\r\n                // console.log(conData)\r\n                var arr = _.cloneDeep(conData)\r\n                // console.log(arr)\r\n                return arr;\r\n              })\r\n          }\r\n          \r\n        })\r\n        \r\n        \r\n        \r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    // const getConvData = async () => {\r\n\r\n\r\n    // }\r\n    getConversations();\r\n  }, [_id]);\r\n\r\n  // }, [conversations,_id]);\r\n\r\n  // useEffect(() => {\r\n  //   if (profile.userId) {\r\n  //     dispatch(getFollowers(profile.userId._id));\r\n  //     dispatch(getFollowings(profile.userId._id));\r\n  //   }\r\n  // }, [dispatch, profile.userId]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\"/conversations/\" + _id);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [_id]);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Messages</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box height=\"92vh\" sx={{ overflowY: \"scroll\" }}>\r\n        {\r\n          convData.length > 0 ?\r\n\r\n            <>{\r\n              convData.map((item, index) =><MessageCard key={index} item={item.userId} con = {item.conversation} />)\r\n            }\r\n            </>\r\n            :\r\n            <Box textAlign=\"center\">\r\n                <CircularProgress size={20} color=\"primary\" />\r\n            </Box>\r\n\r\n        }\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export function parseDate(tdate) {\r\n  var system_date = new Date(Date.parse(tdate));\r\n  var user_date = new Date();\r\n  if (K.ie) {\r\n    system_date = Date.parse(tdate.replace(/( \\+)/, \" UTC$1\"));\r\n  }\r\n  var diff = Math.floor((user_date - system_date) / 1000);\r\n  if (diff <= 1) {\r\n    return \"just now\";\r\n  }\r\n  if (diff < 20) {\r\n    return diff + \" seconds ago\";\r\n  }\r\n  if (diff < 40) {\r\n    return \"half a minute ago\";\r\n  }\r\n  if (diff < 60) {\r\n    return \"less than a minute ago\";\r\n  }\r\n  if (diff <= 90) {\r\n    return \"one minute ago\";\r\n  }\r\n  if (diff <= 3540) {\r\n    return Math.round(diff / 60) + \" minutes ago\";\r\n  }\r\n  if (diff <= 5400) {\r\n    return \"1 hour ago\";\r\n  }\r\n  if (diff <= 86400) {\r\n    return Math.round(diff / 3600) + \" hours ago\";\r\n  }\r\n  if (diff <= 129600) {\r\n    return \"1 day ago\";\r\n  }\r\n  if (diff < 604800) {\r\n    return Math.round(diff / 86400) + \" days ago\";\r\n  }\r\n  if (diff <= 777600) {\r\n    return \"1 week ago\";\r\n  }\r\n  return \"on \" + system_date;\r\n}\r\n\r\nvar K = (function () {\r\n  var a = navigator.userAgent;\r\n  return {\r\n    ie: a.match(/MSIE\\s([^;]*)/),\r\n  };\r\n})();\r\n","import { Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport { parseDate } from \"../utils/parseDate\";\r\n\r\nexport default function Comment({ comment }) {\r\n  return (\r\n    <Box\r\n      padding=\"1rem\"\r\n      sx={{\r\n        \"&:hover\": {\r\n          backgroundColor: \"#eee\",\r\n        },\r\n      }}\r\n    >\r\n      <Grid container flexWrap=\"nowrap\">\r\n        <Grid item sx={{ paddingRight: \"1rem\" }}>\r\n          <img src=\"/logo.png\" alt=\"lgoog\" width=\"50px\" />\r\n        </Grid>\r\n        <Grid item flexGrow=\"1\">\r\n          <Box>\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              flexWrap=\"nowrap\"\r\n            >\r\n              <Grid item>\r\n                <Box display=\"flex\">\r\n                  <Typography\r\n                    sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}\r\n                  >\r\n                    {comment.author.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                  >\r\n                    @{comment.author.handle}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                  >\r\n                    .\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\r\n                  >\r\n                    {parseDate(comment.createdAt)}\r\n                  </Typography>\r\n                </Box>\r\n                <Box>\r\n                  <Typography sx={{ fontSize: \"15px\", color: \"#555\" }}>\r\n                    {comment.text}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton>\r\n                  <MoreHorizIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                marginRight=\"5rem\"\r\n                marginTop=\".8rem\"\r\n              >\r\n                <IconButton size=\"small\">\r\n                  <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <SyncIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  {comment.isLiked ? (\r\n                    <FavoriteIcon fontSize=\"small\" />\r\n                  ) : (\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                  )}\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <IosShareIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Box> */}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\r\nimport SyncIcon from \"@mui/icons-material/Sync\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getComments, getPostDetails } from \"../redux/postSlice\";\r\nimport { addComment, deletePost, likeOrDislikePost } from \"../api\";\r\nimport Comment from \"../components/Comment\";\r\n\r\nexport default function PostDetails() {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const theme = useTheme();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { status, comments, commentStatus, postDetails } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n  const handleDeletePost = async () => {\r\n    const response = await deletePost({ id: postDetails._id });\r\n    if (response) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleLike = async (e) => {\r\n    e.preventDefault();\r\n    const response = await likeOrDislikePost({ id: postDetails._id });\r\n    if (response) {\r\n      dispatch(getPostDetails(id));\r\n      dispatch(getComments(id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetails(id));\r\n    dispatch(getComments(id));\r\n  }, [dispatch, id]);\r\n\r\n  const handleAddComment = async () => {\r\n    const response = await addComment({ id, text: commentText });\r\n    if (response) {\r\n      dispatch(getComments(id));\r\n      setCommentText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item sx={{ mr: \"10px\" }}>\r\n            <IconButton onClick={() => history.goBack()}>\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Post</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box height=\"92vh\" sx={{ overflowY: \"scroll\" }}>\r\n        <Box textAlign=\"center\" marginTop=\"1rem\">\r\n          {status === \"loading\" && (\r\n            <CircularProgress size={20} color=\"primary\" />\r\n          )}\r\n        </Box>\r\n        {status === \"success\" && (\r\n          <Box padding=\"0 20px\">\r\n            <Box>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <img src=\"/logo.png\" alt=\"lgogo\" width=\"60px\" />\r\n                </Grid>\r\n                <Grid item flexGrow=\"1\">\r\n                  <Grid container justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                      <Typography sx={{ fontSize: \"16px\", fontWeight: \"500\" }}>\r\n                        {postDetails.author && postDetails.author.name}\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: \"15px\", color: \"#555\" }}>\r\n                        @{postDetails.author && postDetails.author.handle}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {status === \"success\" &&\r\n                        postDetails.author &&\r\n                        _id === postDetails.author._id && (\r\n                          <IconButton\r\n                            aria-expanded={open ? \"true\" : undefined}\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              handleClick(e);\r\n                            }}\r\n                          >\r\n                            <MoreHorizIcon />\r\n                          </IconButton>\r\n                        )}\r\n\r\n                      <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                          \"aria-labelledby\": \"basic-button\",\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            handleDeletePost();\r\n                          }}\r\n                        >\r\n                          Delete Post\r\n                        </MenuItem>\r\n                      </Menu>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ fontSize: \"20px\" }}>\r\n                {postDetails.text}\r\n              </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" padding=\"1rem 0\" borderBottom=\"1px solid #ccc\">\r\n              <Typography sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}>\r\n                {postDetails &&\r\n                  postDetails.createdAt &&\r\n                  format(new Date(postDetails.createdAt), \"HH:mm a\")}\r\n              </Typography>\r\n              <Typography sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}>\r\n                .\r\n              </Typography>\r\n              <Typography sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}>\r\n                {postDetails &&\r\n                  postDetails.createdAt &&\r\n                  format(new Date(postDetails.createdAt), \"MMM dd yyyy\")}\r\n              </Typography>\r\n            </Box>\r\n            <Box display=\"flex\" padding=\"1rem 0\" borderBottom=\"1px solid #ccc\">\r\n              <Typography sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}>\r\n                <strong>{postDetails.likes && postDetails.likes.length}</strong>{\" \"}\r\n                Likes\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-around\"\r\n              padding=\".5rem 0\"\r\n              borderBottom=\"1px solid #ccc\"\r\n            >\r\n              <IconButton size=\"small\">\r\n                <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n              </IconButton>\r\n              <IconButton size=\"small\">\r\n                <SyncIcon fontSize=\"small\" />\r\n              </IconButton>\r\n              <IconButton onClick={handleLike} size=\"small\">\r\n                {postDetails.isLiked ? (\r\n                  <FavoriteIcon fontSize=\"small\" />\r\n                ) : (\r\n                  <FavoriteBorderIcon fontSize=\"small\" />\r\n                )}\r\n              </IconButton>\r\n              <IconButton size=\"small\">\r\n                <IosShareIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Box>\r\n            <Box>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <img src=\"/logo.png\" alt=\"logo\" width=\"60px\" />\r\n                </Grid>\r\n                <Grid item flexGrow=\"1\">\r\n                  <Box padding=\".5rem 0\">\r\n                    <Input\r\n                      onChange={(e) => setCommentText(e.target.value)}\r\n                      value={commentText}\r\n                      multiline\r\n                      rows=\"2\"\r\n                      disableUnderline\r\n                      type=\"text\"\r\n                      placeholder=\"Post your comment\"\r\n                      sx={{ width: \"100%\" }}\r\n                    />\r\n                  </Box>\r\n                  <Box textAlign=\"right\" paddingBottom=\".5rem\">\r\n                    <Button\r\n                      disabled={commentText.length === 0}\r\n                      onClick={handleAddComment}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        borderRadius: theme.shape.borderRadius,\r\n                        fontSize: \"12px\",\r\n                      }}\r\n                    >\r\n                      Comment\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Box textAlign=\"center\" marginTop=\"1rem\">\r\n                {commentStatus === \"loading\" && (\r\n                  <CircularProgress size={20} color=\"primary\" />\r\n                )}\r\n              </Box>\r\n              {commentStatus === \"success\" &&\r\n                comments.map((comment) => (\r\n                  <Comment key={comment._id} comment={comment} />\r\n                ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { BrowserRouter, Route, Switch, withRouter } from 'react-router-dom'\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Grid,\r\n    IconButton,\r\n    Input,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n    useTheme,\r\n    TextField\r\n} from \"@mui/material\";\r\nexport const EachMessage = ({ _id, type, msg,senderId }) => {\r\n    // console.log(type%2==0)\r\n    // console.log(type)\r\n    return (\r\n        <>\r\n            {_id === senderId ?\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'end'\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        sx={{\r\n                            clear: \"both\",\r\n                            padding: \"10px\",\r\n                            boxSizing: \"border-box\",\r\n                            wordWrap: \"break-word\",\r\n                            marginTop: \"10px\",\r\n                            backgroundColor: \"#3288cd\",\r\n                            color: \"white\",\r\n                            minWidth: \"200px\",\r\n                            maxWidth: \"400px\",\r\n                            borderRadius: \"10px\",\r\n                        }}\r\n                    >\r\n                        {msg}\r\n\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: 'row',\r\n                        maxWidth: \"50%\"\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        sx={{\r\n                            clear: \"both\",\r\n                            padding: \"10px\",\r\n                            boxSizing: \"border-box\",\r\n                            wordWrap: \"break-word\",\r\n                            marginTop: \"10px\",\r\n                            backgroundColor: \"#444ebb\",\r\n                            color: \"white\",\r\n                            minWidth: \"200px\",\r\n                            maxWidth: \"400px\",\r\n                            borderRadius: \"10px\",\r\n                        }}\r\n                    >\r\n                        {msg}\r\n                    </Typography>\r\n                </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\nexport default EachMessage","import {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { EachMessage } from \"../components/EachMessage.jsx\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { io } from \"socket.io-client\";\r\nexport default function MessageDetails() {\r\n  const location = useLocation()\r\n  const { con } = location.state\r\n  // const [commentText, setCommentText] = useState(\"\");\r\n  const [currentChat, setCurrentChat] = useState(con);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const theme = useTheme();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  // console.log(con)\r\n  const dispatch = useDispatch();\r\n  // const { status, comments, commentStatus, postDetails } = useSelector(\r\n  //   (state) => state.post\r\n  // );\r\n  // var socket\r\n\r\n  const { _id } = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n  useEffect(() => {\r\n    socket.current = io(axios.defaults.baseURL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      console.log(data)\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [arrivalMessage]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", _id);\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      // console.log(users)\r\n      // setOnlineUsers(\r\n      //   user.followings.filter((f) => users.some((u) => u.userId === f))\r\n      // );\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getPostDetails(id));\r\n  //   dispatch(getComments(id));\r\n  // }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        // console.log(currentChat?._id)\r\n        const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n\r\n        console.log(res.data)\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async () => {\r\n    // e.preventDefault();\r\n    const message = {\r\n      sender: _id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== _id\r\n    );\r\n    console.log(_id, receiverId, newMessage)\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: _id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/messages\", message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item sx={{ mr: \"10px\" }}>\r\n            <IconButton onClick={() => history.goBack()}>\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Message</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          // alignItems: 'stretch',\r\n          justifyContent: 'space-between',\r\n          // backgroundColor: 'blue',\r\n          height: '90vh',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            // backgroundColor: \"red\",\r\n            // paddingLeft: \"1%\",\r\n            // margin: \"auto auto auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            padding: \"1% 3% 0 3%\",\r\n            // justifyContent: \"center\"\r\n            // alignItems: \"center\",\r\n            // position: \"fixed\",\r\n            // bottom: 0,\r\n            // height: \"20%\",\r\n            flex: 1,\r\n            overflowX: 'hidden',\r\n            overflowY: 'auto'\r\n            // width: \"100%\",\r\n          }}\r\n        >\r\n          \r\n            {\r\n            messages.map((item,index)=>(\r\n            <div ref={scrollRef}>\r\n            <EachMessage _id={_id} type={index} key={index} msg={item.text} senderId={item.sender} />\r\n            </div>\r\n            ))\r\n          }\r\n           \r\n         \r\n          {/* <List\r\n            sx={{\r\n              width: '100%',\r\n              maxWidth: 360,\r\n              bgcolor: 'background.paper',\r\n              position: 'relative',\r\n              overflow: 'auto',\r\n              maxHeight: 300,\r\n              '& ul': { padding: 0 },\r\n            }}\r\n            subheader={<li />}\r\n          >\r\n            {[0, 1, 2, 3, 4].map((sectionId) => (\r\n              <li key={`section-${sectionId}`}>\r\n                <ul>\r\n                  {[0, 1, 2].map((item) => (\r\n                    <ListItem key={`item-${sectionId}-${item}`}>\r\n                      <ListItemText primary={`Item ${item}`} />\r\n                    </ListItem>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </List> */}\r\n\r\n          {/* <Typography>\r\n            Area\r\n          </Typography> */}\r\n\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            // backgroundColor: \"red\",\r\n            paddingLeft: \"1%\",\r\n            // margin: \"auto auto auto 0\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            // position: \"fixed\",\r\n            // bottom: 0,\r\n            // width: \"100%\",\r\n          }}\r\n        >\r\n          <TextField\r\n            id=\"outlined-multiline-flexible\"          // label=\"Multiline\"\r\n            multiline\r\n            maxRows={3}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            value={newMessage}\r\n            sx={{\r\n              backgroundColor: \"white\",\r\n              // padding:\"-2%\",\r\n              width: \"80%\",\r\n            }}\r\n          // value={value}\r\n          // onChange={handleChange}\r\n          // variant=\"standard\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            onClick={() => { handleSubmit() }}\r\n            sx={{\r\n              marginLeft: \"1%\"\r\n            }}\r\n            endIcon={<SendIcon\r\n            />}>\r\n            Send\r\n          </Button>\r\n        </Box>\r\n\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n","import Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\n\r\nimport Layout from \"./components/Layout\";\r\nimport Layout2 from \"./components/Layout2\";\r\nimport Profile from \"./pages/Profile\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Home from \"./pages/Home\";\r\nimport Message from \"./pages/Message\";\r\nimport PostDetails from \"./pages/PostDetails\";\r\nimport MessageDetails from \"./pages/MessageDetails\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { setAuth } from \"./redux/authSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (\"login\" in localStorage) {\r\n      const login = JSON.parse(localStorage.getItem(\"login\"));\r\n      axios.defaults.headers.common[\"authorization\"] = `Bearer ${login.token}`;\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    const { isLoggedIn } = JSON.parse(localStorage.getItem(\"login\")) || {};\r\n    if (isLoggedIn) {\r\n      dispatch(setAuth({ isLoggedIn }));\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n  \r\n  return (\r\n    <Switch>\r\n      <PrivateRoute exact path=\"/profile/:id\">\r\n        <Layout>\r\n          <Profile />\r\n        </Layout>\r\n      </PrivateRoute>\r\n      <PrivateRoute exact path=\"/posts/:id\">\r\n        <Layout>\r\n          <PostDetails />\r\n        </Layout>\r\n      </PrivateRoute>\r\n      <PrivateRoute exact path=\"/home\">\r\n        <Layout>\r\n          <Home />\r\n        </Layout>\r\n      </PrivateRoute>\r\n      <PrivateRoute exact path=\"/messages\">\r\n        <Layout>\r\n          <Message />\r\n        </Layout>\r\n      </PrivateRoute>\r\n      <PrivateRoute exact path=\"/messages/:id\">\r\n        <Layout>\r\n          <MessageDetails />\r\n        </Layout>\r\n      </PrivateRoute>\r\n      <Route exact path=\"/\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./authSlice\";\r\nimport followSlice from \"./followSlice\";\r\nimport postSlice from \"./postSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n    post: postSlice,\r\n    follow: followSlice,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nconst theme = createTheme({});\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n// axios.defaults.baseURL =process.env.REACT_APP_API_URL_DEV;\r\n// if (module.hot) {\r\n//   module.hot.accept();\r\n// }\r\n// console.log(process.env.REACT_APP_API_URL)\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <ThemeProvider theme={theme}>\r\n          <App />\r\n        </ThemeProvider>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}